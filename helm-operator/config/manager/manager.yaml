apiVersion: v1
kind: Namespace
metadata:
  name: planescape-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: planescape-helm-operator
  namespace: planescape-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: planescape-helm-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: planescape-helm-operator
subjects:
- kind: ServiceAccount
  name: planescape-helm-operator
  namespace: planescape-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: planescape-helm-operator
  namespace: planescape-system
  labels:
    app.kubernetes.io/name: planescape-helm-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: planescape
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: planescape-helm-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: planescape-helm-operator
        app.kubernetes.io/component: operator
        app.kubernetes.io/part-of: planescape
    spec:
      serviceAccountName: planescape-helm-operator
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        fsGroup: 65532
      containers:
      - name: operator
        image: quay.io/operator-framework/helm-operator:v1.32.0
        imagePullPolicy: IfNotPresent
        args:
        - --watches-file=/opt/helm/watches.yaml
        - --enable-leader-election
        - --leader-election-id=planescape-helm-operator
        - --zap-devel=false
        - --zap-log-level=info
        - --zap-time-encoding=iso8601
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: "planescape-helm-operator"
        - name: ANSIBLE_GATHERING
          value: explicit
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 768Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: watches
          mountPath: /opt/helm/watches.yaml
          subPath: watches.yaml
          readOnly: true
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: watches
        configMap:
          name: planescape-helm-operator-watches
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: planescape-helm-operator-watches
  namespace: planescape-system
data:
  watches.yaml: |
    ---
    # Watches file for Helm-based operator
    # This defines which resources the operator watches and how to reconcile them

    - group: planescape.io
      version: v1alpha1
      kind: PlanescapeStack
      chart: /opt/helm/charts/planescape
      reconcilePeriod: 5m
      watchDependentResources: true
      overrideValues:
        # Override values based on the CR spec
        postgresql.enabled: "spec.components.postgresql.enabled"
        postgresql.auth.database: "spec.components.postgresql.auth.database"
        postgresql.auth.username: "spec.components.postgresql.auth.username"
        postgresql.primary.persistence.size: "spec.components.postgresql.primary.persistence.size"
        postgresql.primary.resources: "spec.components.postgresql.primary.resources"
        
        jenkins.enabled: "spec.components.jenkins.enabled"
        jenkins.controller.serviceType: "spec.components.jenkins.controller.serviceType"
        jenkins.controller.persistence.size: "spec.components.jenkins.controller.persistence.size"
        jenkins.controller.resources: "spec.components.jenkins.controller.resources"
        jenkins.controller.installPlugins: "spec.components.jenkins.controller.installPlugins"
        
        vault.enabled: "spec.components.vault.enabled"
        vault.server.ha.enabled: "spec.components.vault.server.ha.enabled"
        vault.server.ha.replicas: "spec.components.vault.server.ha.replicas"
        vault.server.resources: "spec.components.vault.server.resources"
        vault.server.dataStorage.size: "spec.components.vault.server.dataStorage.size"

    - group: planescape.io
      version: v1alpha1
      kind: PlanescapeJob
      chart: /opt/helm/charts/planescape-job
      reconcilePeriod: 1m
      watchDependentResources: true
      overrideValues:
        job.name: "metadata.name"
        job.namespace: "metadata.namespace"
        job.schedule: "spec.schedule"
        job.template: "spec.jobTemplate"
        vault.enabled: "spec.vault.enabled"
        vault.role: "spec.vault.role"
        vault.path: "spec.vault.path" 